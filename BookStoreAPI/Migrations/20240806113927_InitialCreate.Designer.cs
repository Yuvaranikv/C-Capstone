// <auto-generated />
using System;
using BookStoreAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStoreAPI.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20240806113927_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStoreAPI.Models.Genres", b =>
                {
                    b.Property<int>("genreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genreId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("genreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("genre_name");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("genreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            genreId = 1,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Fantasy",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 2,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Science Fiction",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 3,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Mystery",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 4,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Thriller",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 5,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Romance",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 6,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Horror",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 7,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Historical Fiction",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 8,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Non-Fiction",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 9,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Adventure",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 10,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Young Adult",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 11,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Classics",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 12,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Literary Fiction",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 13,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Dystopian",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 14,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Magical Realism",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 15,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Graphic Novel",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 16,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Short Stories",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 17,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Biography",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 18,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Self-Help",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 19,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Poetry",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            genreId = 20,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            genreName = "Drama",
                            isActive = true,
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.authors", b =>
                {
                    b.Property<int>("author_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("author_id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("author_id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            author_id = 1,
                            Biography = "British author, best known for the Harry Potter series.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "J.K. Rowling",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 2,
                            Biography = "American novelist and short story writer, known for A Song of Ice and Fire series.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "George R.R. Martin",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 3,
                            Biography = "English writer, poet, and philologist, author of The Lord of the Rings.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "J.R.R. Tolkien",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 4,
                            Biography = "British writer known for her detective novels, especially those revolving around Hercule Poirot.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Agatha Christie",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 5,
                            Biography = "American author of horror, supernatural fiction, suspense, and fantasy novels.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Stephen King",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 6,
                            Biography = "American writer and professor of biochemistry, known for his works of science fiction.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Isaac Asimov",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 7,
                            Biography = "American writer, humorist, entrepreneur, publisher, and lecturer.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Mark Twain",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 8,
                            Biography = "American journalist, novelist, and short-story writer, won the Nobel Prize in Literature in 1954.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Ernest Hemingway",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 9,
                            Biography = "English novelist known for her six major novels including Pride and Prejudice.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Jane Austen",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 10,
                            Biography = "English writer and social critic, created some of the world’s best-known fictional characters.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Charles Dickens",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            author_id = 11,
                            Biography = "American novelist, known for The Great Gatsby.",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "F. Scott Fitzgerald",
                            UpdatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.books", b =>
                {
                    b.Property<int>("book_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("book_id"));

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("author_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genre_id")
                        .HasColumnType("int");

                    b.Property<string>("imageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("publication_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("book_id");

                    b.HasIndex("author_id");

                    b.HasIndex("genre_id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            book_id = 1,
                            ISBN = "9780590353427",
                            author_id = 1,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "The first book in the Harry Potter series by J.K. Rowling.",
                            genre_id = 1,
                            imageURL = "https://example.com/harry_potter.jpg",
                            isActive = true,
                            price = 19.99m,
                            publication_date = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "Harry Potter and the Sorcerer's Stone",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 2,
                            ISBN = "9780553381689",
                            author_id = 2,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "The first book in the A Song of Ice and Fire series by George R.R. Martin.",
                            genre_id = 1,
                            imageURL = "https://example.com/game_of_thrones.jpg",
                            isActive = true,
                            price = 25.99m,
                            publication_date = new DateTime(1996, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "A Game of Thrones",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 3,
                            ISBN = "9780061120084",
                            author_id = 3,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "A novel by Harper Lee published in 1960, instantly successful and has become a classic of modern American literature.",
                            genre_id = 2,
                            imageURL = "https://example.com/to_kill_a_mockingbird.jpg",
                            isActive = true,
                            price = 14.99m,
                            publication_date = new DateTime(1960, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "To Kill a Mockingbird",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 4,
                            ISBN = "9780451524935",
                            author_id = 4,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "A dystopian social science fiction novel and cautionary tale, written by the English writer George Orwell.",
                            genre_id = 3,
                            imageURL = "https://example.com/1984.jpg",
                            isActive = true,
                            price = 15.99m,
                            publication_date = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "1984",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 5,
                            ISBN = "9780141439518",
                            author_id = 5,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "A romantic novel of manners written by Jane Austen in 1813.",
                            genre_id = 4,
                            imageURL = "https://example.com/pride_and_prejudice.jpg",
                            isActive = true,
                            price = 12.99m,
                            publication_date = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "Pride and Prejudice",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 6,
                            ISBN = "9780547928227",
                            author_id = 6,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "A children's fantasy novel by English author J.R.R. Tolkien.",
                            genre_id = 1,
                            imageURL = "https://example.com/the_hobbit.jpg",
                            isActive = true,
                            price = 18.99m,
                            publication_date = new DateTime(1937, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "The Hobbit",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 7,
                            ISBN = "9780316769488",
                            author_id = 7,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "A novel by J.D. Salinger, partially published in serial form in 1945-1946 and as a novel in 1951.",
                            genre_id = 5,
                            imageURL = "https://example.com/the_catcher_in_the_rye.jpg",
                            isActive = true,
                            price = 13.99m,
                            publication_date = new DateTime(1951, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "The Catcher in the Rye",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 8,
                            ISBN = "9780743273565",
                            author_id = 8,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "A 1925 novel written by American author F. Scott Fitzgerald that follows a cast of characters living in the fictional towns of West Egg and East Egg on prosperous Long Island in the summer of 1922.",
                            genre_id = 5,
                            imageURL = "https://example.com/the_great_gatsby.jpg",
                            isActive = true,
                            price = 10.99m,
                            publication_date = new DateTime(1925, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "The Great Gatsby",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 9,
                            ISBN = "9781503280786",
                            author_id = 9,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "A novel by Herman Melville, in which Ishmael narrates the monomaniacal quest of Ahab, captain of the whaler Pequod, for revenge on Moby Dick.",
                            genre_id = 6,
                            imageURL = "https://example.com/moby_dick.jpg",
                            isActive = true,
                            price = 11.99m,
                            publication_date = new DateTime(1851, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "Moby Dick",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            book_id = 10,
                            ISBN = "9780544003415",
                            author_id = 10,
                            createdAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "An epic high-fantasy novel written by English author and scholar J.R.R. Tolkien.",
                            genre_id = 1,
                            imageURL = "https://example.com/the_lord_of_the_rings.jpg",
                            isActive = true,
                            price = 35.99m,
                            publication_date = new DateTime(1954, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            title = "The Lord of the Rings",
                            updatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.userstest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Userstest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 5, 11, 4, 5, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Password = "admin123",
                            UpdatedAt = new DateTime(2024, 8, 5, 11, 4, 5, 0, DateTimeKind.Unspecified),
                            Username = "shreena"
                        });
                });

            modelBuilder.Entity("BookStoreAPI.Models.books", b =>
                {
                    b.HasOne("BookStoreAPI.Models.authors", "Author")
                        .WithMany("Books")
                        .HasForeignKey("author_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStoreAPI.Models.Genres", "Genres")
                        .WithMany("Books")
                        .HasForeignKey("genre_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("BookStoreAPI.Models.Genres", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookStoreAPI.Models.authors", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
